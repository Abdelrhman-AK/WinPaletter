<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAA+1JREFUSEvt
        0n9Q03Ucx/FP4fVPoTfwvmCplfvB2Mb4MZjoDm9EYHmWl7rw4Io8vEvuNNTI1Lu6OjrwKneUnYUtx9Ak
        h6h07bIbRZxYXDvbGjiOC09wOgbjh6hY1PZ99xl8cGP7fr988frT593rv/F+3Od7oAdx1arVLuiSv5xr
        l24qscterBrL3bD7pnZ94XDOejXodDHkZ/9ff6YXy3oyio0u5ZYRp1wH9uSNYJNsgDHtCzC6Zh2MaJ6D
        4ez8QV9W3pcjqbly8mf3n3tVadxV9VbTFdWr/p70YsAwhMNhKGAUfBlaGErN8Q/KNcbrUnU8OTO/PJrX
        M93Zpe4+9WuAYWCCGVAYVGjAm5wNXknWdY8wQ0XO8etjUYvMqtQPYRi4YDZ0QJIFHqEKxsoTPJPnEb9P
        /7nyInVY2t6nF7XCt7JPaS6YE91D0X9ZEOD132lGCeQ8e0eVNtMXig7AOEzjn9CsMAs6uj0xcLcZQdhO
        kPPMHUuzrzakXaIxDuH4OWkNzQQzojupwEQTgojRE6dROmGiq1M5ThgzHIBxiMTPSPV0JByJDpcmBiZO
        YYh5JsLMziy//EidynmzTvUHsOFNkkN0OByOjpRR9J2TCDg2Cq1oAeFCHc/qXG3KdALG8djxRvFH9Aw8
        g/pKltC36xHMtXETUhMuVL3KWWTK7AQ++GlRFR2Epz7vNoq+dQwBn40bURHhQtVkOyunYX64WfgB+F5J
        pMeP4oM8d6sWvUm4UI++ZK14bKMVeG/Hb/Rn36npvy/Ew+Svy+BfWxL4f0+HgFMD4MonK5hed3BrIWDP
        qSJcqIWbW4rxgM9id1+iFx3qBWFDGVRb1vDHXQWFhAsVp2tZFVf4E8y1ReU2CKKCmitTsNi8A6osWuCF
        Xy5YSbiwdOYYqqjNhwdsE1Q4pl4aROMPX70HJ50ph+rvnwnMgQ8AvPcw0Wb3REn7cTxg2uIK+72XBlHq
        SN8sOLl5D1T/kMfx8me/Ikx0y7d2yJ7e1uHHg/BR+zpnvTSIJtb2R8Fyy1tw0JrP9PJ/oDtPQhjmJNtt
        DXgwsyX7O6NeGkQfN1xjhFPOvw0f/rg28h/OQM6zl1LmFCjfcPQoyx2w9F0X40uD6FKjmxVObTkAB39e
        N/3yX5Z1QXtSLDnPXWaFS7Hi/W4PF7q8/gYnnNb6DujbnndPtsUnk7P8WqjvFQlqel1s6FNfe+aCu1QX
        K4Xk3PyKre1ZTB3pr8NoIAr9ZoAN9mPYmHJhn4Ccuf8SDNcUGDU8WX9jaAYVN3oj4QG5Za9BYd07v0/L
        KzPEiBu8KyWN3i3iJlflipNlu0TmnZvFZ3elIUAPkV89iCGE/gPItAVyrxgkjAAAAABJRU5ErkJggg==
</value>
  </data>
</root>