<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>1. Back up third-party tool settings.
2. Back up the WinPaletter theme file.
3. Create a Windows restore point (optional).
4. Use WinPaletter on Windows without any mods (avoid other third-party tools) (optional).
5. Do some tests in a virtual machine (optional).
6. If you insist on using another third-party tool, don't use Windows Effects (disable it).</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAA1VJREFUWEft
        191PW2UcwPHe7FBHaUtpaenphiwsQ0jZvAAChPF2o3+A+xckZpd6Y2IGM14Yl5BMs3mxqFOjU+OFyRYK
        dGO81bVnMGArbSXRq+3GeadZaXKer3mKkvhQ26esl/sm5+bk9Hye9vxyzqnD8aJDRDrgIhfuYLvlbHHb
        CnfIfepxNY3tyEkykSkyYYvtsCDdAukQPArBwyBsBW22AikeNE+yFmhXP3/oyJhN5MKXyZoFMmHYDlMC
        h81m2AjAgwCs+3dZ80+TcPvU81UVWXOMnPmUrEkVOKz54X4TWL7fuecfVc+rFTvmOXJm/jlwSPkg2fiM
        pO8N9fxlYycyQs4s1AAvbuKet0DCO6w6JWMnFCBnPqkhjvjZg0i4H5NsaFK9A/GLeUUHt747wTsTfbz9
        Zg9rN16ugHsQq27sFddl1ftPZINtZM3dSrj85l9fijI+Ps7o6CjffHSqIi5WGhDLDXlWna2qux9Z86IO
        Ln/276dfYWxsjJGREX6cbtfBEUsu7EXXpOruR8Z8qIPLa/7TJ6eK+PDwMDc/PqGFi0UX4m79huoWIxf2
        6+Jy4GauthfxoaEh5j9t1cURC0cFsRI3KNLmGV1cDtyda21FfHBwkOXPjuviiDtHIV7frfoO0qHXdXE5
        cKtftBbxgYEBUl+a2ri4/ZJcwGuqv7cATVwOnPVVhP7+fvr6+tj8NqSNi7hcQF2JBTxqPq2Ly+u9daOF
        3t5eenp6yP4Q0MZF3AnzRlT194ZQE5dbfqWR+FWT+SthCksebVzM1wlijoNDKGOzeV0HlwNnJzxY14Pc
        vx6sBkfMOS3V3Y8N/3s6uBy4axeO093dTTQa5fMLpiZeB3PGu6q7H5vBtn9eJsricuA+ON9KV1cXnZ2d
        TE0c08LFrJHnVplbsYx1/6VKuBy4P2Ie3n/rGBcnIjy96dbBsWPGh6p3INZDASzfk3J4ddd8Dxcx4zFx
        R+XHsQzL+yrJxr9qiP/JrSNnVKdspHznRNKbrwH+jBmjuleyfyPpPS0Snt+eA/+VGePgfb+a5GuUfJMR
        yw2FKvBdO3Zk+n9vOIeJRfdJe8k1Je7WW/KRWgK3xZwzZc8ak8TqavfHpFQsOFwsGB3cdp4tbrNGh9yn
        Hvcinf4Gu49imk5ePdwAAAAASUVORK5CYII=
</value>
  </data>
</root>